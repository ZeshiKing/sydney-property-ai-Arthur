version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rental-aggregator-db
    environment:
      POSTGRES_DB: rental_aggregator
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rental_aggregator"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rental-aggregator-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis123
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rental-aggregator-api
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:password123@postgres:5432/rental_aggregator
      REDIS_URL: redis://redis123@redis:6379
      FIRECRAWL_API_KEY: ${FIRECRAWL_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    command: npm run dev
    restart: unless-stopped

  # Redis Commander (Optional - for Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: rental-aggregator-redis-gui
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis123
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - tools

  # pgAdmin (Optional - for PostgreSQL GUI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: rental-aggregator-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@rental-aggregator.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  default:
    name: rental-aggregator-network